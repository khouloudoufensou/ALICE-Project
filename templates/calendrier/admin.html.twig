{% extends 'base.html.twig' %}

{% block title %}Calendrier!{% endblock %}



{% block stylesheets %}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.3.0/main.min.css" integrity="sha256-uq9PNlMzB+1h01Ij9cx7zeE2OR2pLAfRw3uUUOOPKdA=" crossorigin="anonymous">

<style>
    #calendrier{
        width: 80%;
        margin: auto;
        margin-bottom : 50px;
    }
    .fc-prev-button, .fc-next-button, .fc-today-button, .fc-dayGridMonth-button, .fc-timeGridWeek-button{
        background-color: #fdd340!important;
        background-image: none;
        border :none !important;    
    }
    .admin-button{
        width: 20%;
        margin: auto;
        margin-top :100px;
        margin-bottom : 10px;
    }
    
</style>

{% endblock %}

{% block body %}
    <div class="container">
        <a href="{{ path('calendar_index')}}"><button class="button button--primary admin-button" >Gestion</button></a>
    </div>  
    <div id="calendrier">
    
    </div>
{% endblock %}

{% block javascripts %}
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.3.0/main.min.js" integrity="sha256-DBxkGZLxKsLKhz054qUpBqtotG00r9AELGpSigJujLg=" crossorigin="anonymous"></script>
<script>
    window.onload = () => {
        let calendarElt = document.querySelector("#calendrier")

        let calendar = new FullCalendar.Calendar(calendarElt, {
            initialView: 'timeGridWeek',
            locale: 'fr',
            timeZone: 'Europe/Paris',
            headerToolbar: {
                start: 'prev,next today',
                center: 'title',
                end: 'dayGridMonth,timeGridWeek'
            },
            buttonText: {
                today:    'Aujourd\'hui',
                month:    'Mois',
                week:     'Semaine',
                day:      'Jour'
            },
            events: {{ data|raw }},
            editable: true,
            eventResizableFromStart: true
        })
        calendar.on('eventChange', (e) => {
            let url = `/api/${e.event.id}/edit`
            let donnees = {
                "title": e.event.title,
                "description": e.event.extendedProps.description,
                "start": e.event.start,
                "end": e.event.end,
                "backgroundColor": e.event.backgroundColor,
                "borderColor": e.event.borderColor,
                "textColor": e.event.textColor,
                "allDay": e.event.allDay
            }
            
            let xhr = new XMLHttpRequest
            xhr.open("PUT", url)
            xhr.send(JSON.stringify(donnees))
        })
        calendar.render()
    }
    
</script>

{% endblock %}
